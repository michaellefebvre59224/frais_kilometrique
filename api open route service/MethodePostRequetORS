//////////////////////////////////////////////////////////////////////////
///////////////////////// M E T H O D E   P O S T ////////////////////////
////////////////////////////////////////////////////////////////////////// 
// Maven : Add these dependecies to your pom.xml (java6+)
//  <dependency>
//    <groupId>org.glassfish.jersey.core</groupId>
//    <artifactId>jersey-client</artifactId>
//    <version>2.27</version>
//  </dependency>
//  <dependency>
//    <groupId>org.glassfish.jersey.inject</groupId>
//    <artifactId>jersey-hk2</artifactId>
//    <version>2.28</version>
//  </dependency>
//  <dependency>
//    <groupId>javax.activation</groupId>
//    <artifactId>activation</artifactId>
//    <version>1.1.1</version>
//  </dependency>
//  <dependency>
//    <groupId>javax.xml.bind</groupId>
//    <artifactId>jaxb-api</artifactId>
//    <version>2.3.1</version>
//  </dependency>
/*
import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.MediaType;

    //initialisé la variable pour les coordonnées du trajet, point de départ, point d'arrivé et possibilité d'étape
        String coordonnees = "{\"coordinates\":[[8.681495,49.41461],[8.686507,49.41943],[8.687872,49.420318]]}";

        Client client = ClientBuilder.newClient();
        Entity<String> payload = Entity.json(coordonnees);

        Response response = client.target("https://api.openrouteservice.org/v2/directions/driving-car")
                .request()
                .header("Authorization", "5b3ce3597851110001cf6248ac4ad383ccff42e5835fa4d27205c3f7")
                .header("Accept", "application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8")
                .header("Content-Type", "application/json; charset=utf-8")
                .post(payload);

        System.out.println("status: " + response.getStatus());
        System.out.println("headers: " + response.getHeaders());
        System.out.println("body:" + response.readEntity(String.class));

    
